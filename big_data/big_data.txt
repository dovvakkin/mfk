----------------------------------------------------------------
БОЛЬШИЕ ДАННЫЕ - 12.09.2018
----------------------------------------------------------------


Большие данные - огромные массивы данных со сложной неоднородной и неопределённой структурой

Больште данные (как дисциплина) - совокупность подходов, инструментов и методов обработки структурированных и неструктурированных
данных
-- огромных объёмов
-- значительного многообразия
для получения воспринимаемых человеком результатов

Объём данных растёт в геометрической прогрессии, удваиваясь каждые 1,2 года

Большие наборы данных
	от 1000 мб (1 гб) до сотен гб
Огромные наборы данных
	от 1000 гб (1 тб) до нескольких тб
***
	***

Источники больших данных
-- социальные сети
-- мобильные устройства
-- данные с измерительных устройств
-- бизнес-информация

Сферы использования больших данных
-- прогнозирование климата
-- создание новых материалов
-- расчёт безопасности аэс
-- моделирование газодинамического обтекания тел
-- анализ данных георазведки
-- моделирование процесса нефтедобычи
-- отслеживание состояния оборудования
-- астрономия (отслеживание 40 млн объектов)
-- дистанционное зондирование земли, контроль окружающей среды (400 спутников, данные около 8тб в день)

В экономике и банковской сфере
-- прогнозирование спроса и цены
-- клиентский сервис
-- управление рисками
-- управление поставками товара, его хранением и продажами
-- оптимизация затрат
-- изучение кредитоспособности заёмщика
-- операционная эффективность

-- поисковые системы и веб-аналитика
-- биоинформатика и медицина
	-- изучение генома человека (3300 пб)
	-- предсказание медицинских рисков на основе данных об активности генов
	-- построение искусственных белков с заданной функциональностью (по команде выполнить действие)
	-- компьютерное проектирование лекарств
-- нейронаука(изучение мозга): альтернативные способы изучения мозга, новые теоретические модели кодирования информации, объединение гуманитарных и естественных наук

-- большой андронный коллайдер 
	в год - 150 зб (10^21 байт)
	на основе методов анализа БД был открыт бозон Хиггса


Основные характеристики
-- Volume: накопленная БД является слишком большой для обработки и хранения традиционными способами
-- Velocity: скорость накопления и обработки превышает возможности типических БД
-- Variety: большое разнообразие структурированных и неструктурированных данных

другие характеристики
-- Veracity (достоверность)
-- Variability (переменчивость)
-- Value (ценность)
-- Visualization (...)
-- Viability (жизнеспособность)

БД сравнивают с кораблём, тянущим за собой сеть, собрающую всё подряд => неадекватное использование БД может привести к неадекватной сложности обпработки и неадекватному пониманию реальности


Три эпохи работы с данными
I.   классическая пара - эксперимент и теория 
	-- ручные вычисления
II.  компьютерное моделирование (например, моделирование взрявы ядерной/водородной бомбы)
	-- приближённые вычисления
III. работа с Большими Данными
	-- нужна новая математика (включающая математическое моделирование гуманитарных явлений и процессов)

Data Science - изучение проблем хранения, обработки и передачи больших данных


Математические направления
-- хранение
-- обработка
-- передача 


Харнение данных 
-- распределённые хранилища информации
-- облачные сервисы
-- модели и алгоритмы
	-- автоматизированного контроля качества данных
	-- своевременного выявления злонамеренных действий и сбоев
	-- оперативного нахлждения причин их возникновения
-- оптимальные архитектуры организации данных
-- механизмы защиты целостности и конфиденциальности данных

Обработка данных (основная часть курса)
-- агрегирование и фильтрация данных
-- анализ зашумлённости данных
-- кластеризация и структуризация данных
-- статистические методы машинного обучения
-- нейросетевые алгоритмы машинного обучения


Главное содержание науки о Больших Данных - построение методов трансформации Больших Данных в простые алгоритмы принятия решений

Требуются фундаментальные занния в
-- математике
-- статистике
-- информатике и программировании
-- бизнесе
-- экономике и других областях (например, русском языке и философии (примечание меня))
Нужна новая математика

За 1992-2012
-- компьютеры ускорились в 8000 раз
-- благодаря развитию математических идей алгоритмы расчёта ускорились почти в 500 000 раз

Совместный эффект математики и компьютеров - ускорение в 4 млрд раз, есть прогноз, что возможно ускорение в 450 млрд раз




----------------------------------------------------------------
АРХИТЕКТУРА - 19.09.2018
----------------------------------------------------------------

ВСЁ может сломаться
-- fail-stop (остановка по ошибке)
-- fail-recovery (ошибка не влияет на работу системы)
-- byzantine (все данные и все вычисления дублируются)

чем больше уровень гарантий, тем сложнее и медленнее система

узлы и соединения
узлы могут быть:
-- perfect (гарантия целостности)
-- fail-loss link (любые потери равновероятны)
-- 

модель синхронности:

>> clock drift (абсолютная разница во времени) 
>> clock screw (разница в течениии времении)
-- синхронные ()
-- асинхронные ()

Параллелльное вычисление
-- fail-stop
-- perfect-link
-- synchronous

распределённые вычисления (hadoop, spark)
-- fail-recovery
-- fair-loss link
-- asynchronous 

grid computing (больше половины сети честны, но мы не можем доверять конкретному узлу)
-- byzantite
-- 
-- 



-- распределённые файловые системы
	-- системы горизонтального масштабирования (для обработки большего количества информации нужно больше компьютеров)
		-- больше компонентов могут выйти из строя -> нужно больше копий
		-- загрузка кластера должна быть равномерной (чтобы не ломались высоконагруженные диски, гововрит Мария) 
		-- поломка системы - норма

		-- делим файлы на блоки равного размера (чтобы не было задачи коммивояжёра)
		-- храним с тройной репликацией (три копии каждого блока)

	-- дизайн системы
		--данные хранятся на data-node (junk-server), мета-информация - в оперативной памяти master-server

	-- HDFS
		-- новые названия ))0)
		-- small files problem (катастрофически увеличивают нагрузку на name-node)
		-- name-node
			-- SPoF (единственная точна отказа (отказ в одной точке порождает отказ всей системы))
			-- secondary name-node (образы памяти мета-информации, чтобы не перегружать машину name-node)

	-- запись (загуглить PIPELINE)
		--отдельная машина
		1) спросить у name-node, куда писать

		-- на data-node для каждого блока храним state-machine


-- map reduce
	1) map 
		детерминированная функция
	2) reduce
		-- набор данных должен быть определённым образом отсортирован
	?) shuffle & sort

	map: (key, value) -> (key, value)	
	reduce: (key, value) -> (key, value)	

















